Browsers Limit to 6 Simultaneous Connections per Hostname
http://blog.olamisan.com/max-parallel-http-connections-in-a-browser

AWS S3 Outperforms GCP in latency. Ideal for multiple smaller queries.
http://blog.zachbjornson.com/2015/12/29/cloud-storage-performance.html

Also, 
    - no data fee for data coming into AWS
    - no data fee for data from S3 -> EC2 (assuming also applies to S3 => Lambda within Region)
    
NodeJS Limit Simultaneous Requests? No
https://stackoverflow.com/questions/12060869/why-is-node-js-only-processing-six-requests-at-a-time

Solution Could be AJAX request => Serverless function => Parallel S3 requests collating data.
Data reduced in cloud and sent to Application.

 - Load example Data into S3
    Format: dataset/sequence_type/sequence_num/sumlev/state?/geoid
    

- Server(less) function handles logic of which attribute to get.

To Build

BASH - with AWS CLI Load one sample sequence file into S3
    - Combine with geofile on load to bucket

HTML - Simple Sample AJAX POST request, 
{ ids: 1000 Tract GEOIDs, attr: attribute formula (simple value or attribute/total) }

Serverless function:
    Makes a Call for Each GEOID.
    Extract data for each GEOID and find needed attribute based on supplied formula.
    send JSON [{geoid, value}] (later send back GL Map Style Object Only)
    
    
    Cloudfront in front of S3.
    
PUT and get requests are expensive.  Moving large amounts of data around in the same region is not.
    - must combine data together in a reasonable way
    - blocks in BG
    - tracts in county
    - counties in state
    
--- 
blocks - id, attribute value - that's it.  
    - how big is a style file with 11,000,000+ features?  How long to calculate?
    - look up mapbox strategy article separating layers into multiple layers. for size considerations.
        - https://blog.mapbox.com/hundreds-of-thousands-of-polygons-rendered-on-the-fly-9eb0b81b64f3
        
 - blocks by county is reasonable - if:
    - make it impossible to view entire map at block level.  strictly control zoomlev for blocks
        - and maybe for block groups too
        
 - somehow need to get all blocks in single tileset layer.  with just geoid as key
 
    
    
    
    // PREJOIN GEOFILE with EVERY SEQUENCE FILE